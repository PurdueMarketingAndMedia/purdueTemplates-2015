/*
	Source: https://css-tricks.com/snippets/sass/power-function/
	Author: Hugo Giraudel (https://css-tricks.com/author/hugogiraudel/)
*/
@function math-pow($number, $exponent) {
	@if (round($exponent) != $exponent) {
		@return math-exp($exponent * math-ln($number));
	}

	$value: 1;

	@if $exponent > 0 {
		@for $i from 1 through $exponent {
			$value: $value * $number;
		}
	} @else if $exponent < 0 {
		@for $i from 1 through -$exponent {
			$value: $value / $number;
		}
	}

	@return $value;
}

@function math-factorial($value) {
	$result: 1;

	@if $value == 0 {
		@return $result;
	}

	@for $index from 1 through $value {
		$result: $result * $index;
	}

	@return $result;
}

@function math-summation($iteratee, $input, $initial: 0, $limit: 100) {
	$sum: 0;

	@for $index from $initial to $limit {
		$sum: $sum + call(get-function($iteratee), $input, $index);
	}

	@return $sum;
}

@function math-exp-maclaurin($x, $n) {
	@return (math-pow($x, $n) / math-factorial($n));
}

@function math-exp($value) {
	@return math-summation('math-exp-maclaurin', $value, 0, 100);
}

@function math-ln-maclaurin($x, $n) {
	@return (math-pow(-1, $n + 1) / $n) * (math-pow($x - 1, $n));
}

@function math-ln($value) {
	$ten-exp: 1;
	$ln-ten: 2.30258509;

	@while ($value > math-pow(10, $ten-exp)) {
		$ten-exp: $ten-exp + 1;
	}

	@return math-summation(math-ln-maclaurin, $value / math-pow(10, $ten-exp), 1, 100) + $ten-exp * $ln-ten;
}