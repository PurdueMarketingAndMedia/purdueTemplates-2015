$block:button;
.#{$block}{
	display:inline-block;
	outline:none;
	border:solid 2px $color-campusGold;
	border-radius:0;
	padding:calc-toRem(calc-ratioLgMd(8)) calc-toRem(calc-ratioLgMd(60));
	background-color:$color-campusGold;
	transition:background-color 0.1s, border-color 0.1s, outline-color 0.1s, color 0.1s;
	color:#000;
	font-family:$font-archivo-narrow;
	font-size:calc-toRem(calc-ratioLgMd(18));
	font-weight:700;
	text-align:center;
	text-transform:uppercase;
	&:link,&:visited{
		color:#000;
		text-decoration:none;
	}
	&:hover,&:active,&:focus{
		outline:none;
		border:solid 2px $color-campusGold;
		background-color:transparent;
		color:#000;
		text-decoration:none;
		cursor:pointer;
	}
	@each $color,$pair in $colorPairs-button{
		&-#{$color}{
			border-color:nth($pair,1);
			background-color:nth($pair,1);
			color:nth($pair,2);
			&:hover,&:active,&:focus{
				@if length($pair) > 2{
					border-color:nth($pair,3);
				}
				@else{
					border-color:nth($pair,1);
				}
				background-color:transparent;
				@if length($pair) > 3{
					color:nth($pair,4);
				}
				@else{
					color:#000;
				}
			}
		}
	}
	&-hollow{
		background-color:transparent;
		&:hover,&:active,&:focus{
			background-color:$color-campusGold;
		}
		@each $color,$pair in $colorPairs-button{
			&-#{$color}{
				@if length($pair) > 2{
					border-color:nth($pair,3);
				}
				@else{
					border-color:nth($pair,1);
				}
				background-color:transparent;
				@if length($pair) > 3{
					color:nth($pair,4);
				}
				@else{
					color:#000;
				}
				&:hover,&:active,&:focus{
					border-color:nth($pair,1);
					background-color:nth($pair,1);
					color:nth($pair,2);
				}
			}
		}
	}
	&-bar{
		position:relative;
		border:solid 2px $color-campusGold;
		&::after{
			content:'';
			position:absolute;
			bottom:-2px;
			left:-2px;
			right:-2px;
			display:block;
			height:calc-toRem(calc-ratioLgMd(5));
			background-color:darken($color-campusGold,15);
		}
		&:hover,&:active,&:focus{
			border:solid 2px darken($color-campusGold,15);
		}
		@each $color,$pair in $colorPairs-button{
			&-#{$color}{
				border-color:nth($pair,1);
				background-color:nth($pair,1);
				color:nth($pair,2);
				&::after{
					background-color:darken(nth($pair,1),15);
				}
				&:link,&:visited{
					color:nth($pair,2);
				}
				&:hover,&:active,&:focus{
					background-color:transparent;
					border-color:darken(nth($pair,1),15);
				}
			}
		}
	}
	&-opaque{
		border-color:#000;
		background-color:#000;
		background-color:rgba(0,0,0,0.5);
		color:#fff;
		&:link,&:visited{
			border-color:#000;
			background-color:#000;
			color:#fff;
		}
		&:hover,&:active,&:focus{
			border-color:#000;
			background-color:#000;
			color:#fff;
		}
	}
	&-light{
		&:not(.#{$block}-hollow){
			//don't make the hover text white on hover & active states of hollow buttons
			&:hover,&:active{
				color:#fff;
			}
		}
		@each $color,$pair in $colorPairs-button{
			@if (nth($pair,1) != #000 and nth($pair,1) != #000000){
				//don't create a light version of a button that is already black
				&.#{$block}-#{$color}{
					&:hover,&:active,&:focus{
						color:#fff;
					}
				}
			}
		}
		&.#{$block}-hollow{
			color:#fff;
			&:link,&:visited{
				color:#fff;
			}
			@each $color,$pair in $colorPairs-button{
				@if ((length($pair) > 2 and (nth($pair,3) != #000 and nth($pair,3) != #000000)) or (length($pair) == 2 and (nth($pair,1) != #000 and nth($pair,1) != #000000))){
					//don't create a light version of a hollow button that has a black border
					&-#{$color}{
						color:#fff;
						&:link,&:visited{
							color:#fff;
						}
						&:hover,&:active,&:focus{
							color:nth($pair,2);
						}
					}
				}
			}
		}
		&.#{$block}-opaque{
			border-color:#fff;
			background-color:#000;
			background-color:rgba(250,250,250,0.5);
			color:#000;
			&:link,&:visited{
				border-color:#fff;
				background-color:#000;
				background-color:rgba(250,250,250,0.5);
				color:#000;
			}
			&:hover,&:active,&:focus{
				border-color:#fff;
				background-color:#fff;
				color:#000;
			}
		}
	}
	&-wide{
		width:100%;
		min-width:auto;
	}
	@media (min-width:1200px){
		padding:calc-toRem(8) calc-toRem(60);
		font-size:calc-toRem(18);
		&-wide{
			&-lg{
				width:100%;
				min-width:auto;
			}
		}
		&-bar{
			position:relative;
			&::after{
				height:calc-toRem(5);
			}
		}
	}
	@media (min-width:992px) and (max-width:1199px){
		&-wide{
			&-md{
				width:100%;
				min-width:auto;
			}
		}
	}
	@media (min-width:768px) and (max-width:991px){
		padding:calc-toRem(8) calc-toRem(65);
		font-size:calc-toRem(calc-ratioLgMd(20));
		&-wide{
			&-sm{
				width:100%;
				min-width:auto;
			}
		}
	}
	@media (max-width:767px){
		padding:calc-toRem(8) calc-toRem(45);
		font-size:calc-toRem(18);
		&-wide{
			&-xs{
				width:100%;
				min-width:auto;
			}
		}
		&-bar{
			position:relative;
			&::after{
				height:calc-toRem(5);
			}
		}
	}
}
